Summary:
Optimize the getEventStatusToEventNotification(...) method in CorpPSNGatewayServiceImpl to improve retry efficiency, memory usage, and code maintainability.

Component: CorpPSNGatewayServiceImpl.java
Priority: Medium
Type: Task / Technical Improvement
Labels: performance, refactoring, retry-logic

ðŸŽ¯ Problem Statement
The current method implementation performs multiple responsibilities in a single block and contains inefficient constructs that can impact runtime performance and maintainability:

Tight retry loop without any delay or backoff.

Repeated creation of heavy ObjectMapper instance inside the retry loop.

All logic handled inside a single method (low cohesion, hard to test and reuse).

Redundant code around client ID/Tpp ID parsing and transformation.

âœ… Suggested Improvements
Introduce Exponential or Fixed Backoff Between Retries

Add a small delay (e.g., 100â€“200ms) between retry attempts.

Helps avoid CPU spike or hammering downstream services under failure scenarios.

Reuse ObjectMapper

Autowire or inject as a singleton Spring bean.

Avoid per-invocation instantiation to improve memory usage and reduce GC pressure.

Refactor the Method into Smaller Units

Extract responsibilities into separate methods:

validateEventType(...)

fetchClientIdentifiers(...)

prepareEventNotification(...)

sendEventNotificationWithRetry(...)

Improves testability, readability, and future maintenance.

Eliminate Redundant Logic

Avoid repeating fetchApiTppClientFromCustomerService(...) and splitting logic.

Consolidate parsing and validation into one reusable unit.

Optimize String Handling

Replace StringBuilder with String.format(...) or URI templates for URL construction if it improves readability.

âœ… Acceptance Criteria
Retry logic includes delay between attempts.

ObjectMapper is injected and reused.

Method is decomposed into smaller private helpers.

No duplicate parsing or API call logic.

Functionality remains unchanged and passes existing integration tests.

